import cv2
import numpy as np
frameWidth = 640
frameHeight = 480
cap = cv2.VideoCapture(0)
cap.set(3, frameWidth)
cap.set(4, frameHeight)
cap.set(10, 100)

myColors = np.array([[9, 127, 143, 72, 252, 255],
            [67,120,99, 111, 255, 255],
            [153,53,115,179, 224, 255]
                     ])
#53,68,120,84,222,255: green
# [84,157,69, 142, 255, 255]: blue [247,234,82]
myColorValues = [[77,249,255],[252,255,77],[255,15,215]]
#y,b,p,o
myPoints = []
# yellow,blue,pink,orange
def findColor(img,myColors,myColorValues):

    imgHSV = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
    count = 0
    newPoints=[]
    for color in myColors:
        lower = np.array(color[0:3])
        upper = np.array(color[3:6])
        mask = cv2.inRange(imgHSV,lower,upper)
        # cv2.imshow(str(color[0]), mask)
        x,y =getContours(mask)
        cv2.circle(imgResult,(x,y),10,myColorValues[count],cv2.FILLED)
        if x!=0 and y!=0 :
            newPoints.append([x,y,count])
        count += 1
    return newPoints

def getContours(img):
    contours, hierarchy = cv2.findContours(img,cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_NONE)
    x,y,w,h = 0,0,0,0
    for cnt in contours:
        area = cv2.contourArea(cnt);
        if area > 500:
            # cv2.drawContours(imgResult,cnt,-1,(255,0,0),3)
            peri = cv2.arcLength(cnt,True);
            approx = cv2.approxPolyDP(cnt,0.02*peri,True);
            x , y, w, h = cv2.boundingRect(approx);
    return x + w // 2-10,y

def drawOnCanvas(myPoints, myColorValues):
    for point in myPoints:
        cv2.circle(imgResult,(point[0],point[1]),10,myColorValues[point[2]],cv2.FILLED)
while (True):
    success, img = cap.read()
    # img = cv2.rotate(img,cv2.ROTATE__CLOCKWISE)
    img = cv2.flip(img, 3)
    imgResult = img.copy()
    newPoints = findColor(img, myColors,myColorValues)
    if len(newPoints) !=0:
        for newP in newPoints:
            myPoints.append(newP)
    if len(newPoints) != 0 :
        drawOnCanvas(myPoints,myColorValues)
    cv2.imshow("Result", imgResult)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
